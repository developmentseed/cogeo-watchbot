service: redis-cache

provider:
  name: aws
  stage: production

deploymentBucket: remotepixel-${self:provider.region}

resources:
    Resources:
      VPC:
        Type: AWS::EC2::VPC
        Properties:
          CidrBlock: "10.0.0.0/16"
      
      IP:
        Type: AWS::EC2::EIP
        Properties:
          Domain: vpc
      
      InternetGateway:
        Type: AWS::EC2::InternetGateway
      
      VPCGatewayAttachment:
        Type: AWS::EC2::VPCGatewayAttachment
        Properties:
          VpcId:
            Ref: VPC
          InternetGatewayId:
            Ref: InternetGateway
      
      NatGateway:
        Type: AWS::EC2::NatGateway
        Properties:
          AllocationId:
            Fn::GetAtt:
              - IP
              - AllocationId
          SubnetId:
            Ref: PublicSubnetA
      
      PrivateSubnetA:
        DependsOn: VPC
        Type: AWS::EC2::Subnet
        Properties:
          VpcId:
            Ref: VPC
          AvailabilityZone: ${self:provider.region}a
          CidrBlock: "10.0.1.0/24"
      
      PublicSubnetA:
        DependsOn: VPC
        Type: AWS::EC2::Subnet
        Properties:
          VpcId:
            Ref: VPC
          AvailabilityZone: ${self:provider.region}a
          CidrBlock: "10.0.2.0/24"
      
      PrivateRouteTable:
        Type: AWS::EC2::RouteTable
        Properties:
          VpcId:
            Ref: VPC
      
      PrivateRoute:
        Type: AWS::EC2::Route
        Properties:
          RouteTableId:
            Ref: PrivateRouteTable
          DestinationCidrBlock: 0.0.0.0/0
          NatGatewayId:
            Ref: NatGateway
      
      PublicRouteTable:
        Type: AWS::EC2::RouteTable
        Properties:
          VpcId:
            Ref: VPC
      
      PublicRoute:
        Type: AWS::EC2::Route
        Properties:
          RouteTableId:
            Ref: PublicRouteTable
          DestinationCidrBlock: 0.0.0.0/0
          GatewayId:
            Ref: InternetGateway
      
      SubnetRouteTableAssociationLambdaPrivateA:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
          SubnetId:
            Ref: PrivateSubnetA
          RouteTableId:
            Ref: PrivateRouteTable
      
      SubnetRouteTableAssociationLambdaPublicA:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
          SubnetId:
            Ref: PublicSubnetA
          RouteTableId:
            Ref: PublicRouteTable
      
      ServerlessSecurityGroup:
        DependsOn: VPC
        Type: AWS::EC2::SecurityGroup
        Properties:
          GroupDescription: SecurityGroup for Serverless Functions
          VpcId:
            Ref: VPC
      
      ServerlessStorageSecurityGroup:
        DependsOn: VPC
        Type: AWS::EC2::SecurityGroup
        Properties:
          GroupDescription: Ingress for Redis Cluster
          VpcId:
            Ref: VPC
          SecurityGroupIngress:
          - IpProtocol: tcp
            FromPort: '6379'
            ToPort: '6379'
            SourceSecurityGroupId:
              Ref: ServerlessSecurityGroup
      
      ServerlessCacheSubnetGroup:
        Type: AWS::ElastiCache::SubnetGroup
        Properties:
          Description: "Cache Subnet Group"
          SubnetIds:
          - Ref: PrivateSubnetA

      ServerlessElasticacheCluster:
        DependsOn: ServerlessStorageSecurityGroup
        Type: AWS::ElastiCache::CacheCluster
        Properties:
          AutoMinorVersionUpgrade: true
          Engine: redis
          CacheNodeType: cache.t1.micro
          NumCacheNodes: 1
          VpcSecurityGroupIds:
          - "Fn::GetAtt": ServerlessStorageSecurityGroup.GroupId
          CacheSubnetGroupName:
            Ref: ServerlessCacheSubnetGroup

    Outputs:
      securityGroupIdsOutput:
        Value:
          'Fn::GetAtt': ServerlessSecurityGroup.GroupId
        Export:
          Name: securityGroupIds
      
      subnetIdsOutput:
        Value:
          Ref: PrivateSubnetA
        Export:
          Name: subnetIds

      RedisHost:
        Description: Host of newly created ElastiCache
        Value: !GetAtt
          - ServerlessElasticacheCluster
          - RedisEndpoint.Address
        Export:
          Name: RedisHost

      RedisPort:
        Description: Port of newly created ElastiCache
        Value: !GetAtt
          - ServerlessElasticacheCluster
          - RedisEndpoint.Port
        Export:
          Name: RedisPort
